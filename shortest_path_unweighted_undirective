#include<bits/stdc++.h>
using namespace std;
#define int long long int
const int mxN =150000;
int32_t main(){
  ios_base::sync_with_stdio(0);
   cin.tie(0); cout.tie(0);

 /*
     no weight or same weight can also be applied in matrix
 */
       int n,e; cin>>n>>e;
       
       vector<int> g[n];
       for(int i=0;i<e;i++){
       	int u,v; cin>>u>>v; u--;v--;
       	g[u].push_back(v);
       	g[v].push_back(u);
	   }
	   int s,d; cin>>s>>d; // source , destination
	   s--; d--;
	   
	   vector<int> dis(n,0),visi(n,0);
	   dis[s]=0;
	    
	    queue<int> q;
	    q.push(s);
	    
	    
	    // since going level by level no need to check dis just check visited
	    // imagin ant animation
	    visi[s]=1;
	    while(!q.empty()){
	    	int v=q.front();q.pop();
	    	for(auto x:g[v])
			{
			      if(visi[x]) continue;
			      visi[x]=1;
			      dis[x]=dis[v]+1;
			      
				  q.push(x);
			} 
		}

       for(auto x: dis) cout<<x<<" "; cout<<endl;



 return 0;}

